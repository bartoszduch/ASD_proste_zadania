
#Część 1 Sortowanie przez wstawianie

import random
import time

def sortowanie_przez_wstawianie(tablica):
    n = len(tablica)
    for i in range (1, n):
        x = tablica[i]
        j = i - 1
        while j >= 0 and tablica[j] > x:
            tablica[j + 1] = tablica[j]
            j -= 1
        tablica[j + 1] = x
    return tablica

dlugosc_ciagu = 1000
iteracje = 100

czas = []
for i in range(iteracje):
    ciag = [random.randint(0, 100) for _ in range(dlugosc_ciagu)]
    start_time = time.time()
    sortowanie_przez_wstawianie(ciag)
    end_time = time.time()
    czas.append(end_time - start_time)

sredni_czas = sum(czas) / iteracje
najwolniejsza_iteracja = max(czas)
najszybsza_iteracja = min(czas)

print("�redni czas wykonania iteracji: ", sredni_czas)
print("Najwolniejsza iteracja: ", najwolniejsza_iteracja)
print("Najszybsza iteracja: ", najszybsza_iteracja)
#Część 2
import random
import time


TA=[154,2,423,43,234,54,3]


def merge(A, a, c, b):
    L = A[a:c+1]
    R = A[c+1:b+1]
    i = j = 0
    k = a
    while i < len(L) and j < len(R):
        if L[i] < R[j]:
            A[k] = L[i]
            i += 1
        else:
            A[k] = R[j]
            j += 1
        k += 1
    while i < len(L):
        A[k] = L[i]
        i += 1
        k += 1
    while j < len(R):
        A[k] = R[j]
        j += 1
        k += 1

def mergesort(A,a,b):
    if a < b:
        c = (a+b)//2
        mergesort(A, a,c)
        mergesort(A, c+1, b)
        merge(A, a, c, b)
    return A

print("Posortowany ciag", mergesort(TA, 0, len(TA)-1))

dlugosc_ciagu = 1000
iteracje = 100

czas = []
for i in range(iteracje):
    ciag = [random.randint(0, 100) for _ in range(dlugosc_ciagu)]
    start_time = time.time()
    mergesort(ciag, 0, len(TA)-1)
    end_time = time.time()
    czas.append(end_time - start_time)

sredni_czas = sum(czas) / iteracje
najwolniejsza_iteracja = max(czas)
najszybsza_iteracja = min(czas)

print("Sredni czas wykonania iteracji: ", sredni_czas)
print("Najwolniejsza iteracja: ", najwolniejsza_iteracja)
print("Najszybsza iteracja: ", najszybsza_iteracja)